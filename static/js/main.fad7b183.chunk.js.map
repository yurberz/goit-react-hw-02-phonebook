{"version":3,"sources":["components/AppStyled.js","components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["Container","styled","div","Form","form","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleSubmit","evt","preventDefault","props","onSubmit","setState","handleChange","currentTarget","value","this","id","className","htmlFor","type","onChange","placeholder","Component","ContactUl","ul","ContactList","contacts","onDeleteContact","map","onClick","Label","label","Filter","App","filter","addContact","contact","find","toLowerCase","alert","trim","test","delContact","contactId","getContacts","includes","changeFilter","filteredContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fad7b183.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 1280px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .h1Title {\n    text-align: center;\n    margin-bottom: 30px;\n    font-size: 46px;\n    color: honeydew;\n  }\n\n  .h2Title {\n    margin-bottom: 30px;\n    font-size: 32px;\n    color: honeydew;\n  }\n\n  .text {\n    font-size: 18px;\n    font-style: italic;\n    color: salmon;\n  }\n`;\n\nexport default Container;\n","import styled from \"styled-components\";\n\nconst Form = styled.form`\n  padding: 10px;\n  margin-bottom: 50px;\n  border: 1px dotted orange;\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    color: honeydew;\n    font-size: 22px;\n    font-weight: 700;\n  }\n\n  .input {\n    margin-top: 20px;\n    padding: 10px;\n    width: 250px;\n    height: 35px;\n    color: black;\n    font-size: 16px;\n    font-style: italic;\n  }\n\n  .submitBtn {\n    display: flex;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 10px;\n    min-width: 80px;\n    height: 25px;\n    outline: none;\n    border-radius: 4px;\n    border-bottom: solid 1px #d6d6d6;\n    background-color: honeydew;\n    color: black;\n    font-weight: 700;\n    font-size: 14px;\n\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      background-color: springgreen;\n    }\n  }\n`;\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport Form from \"./ContactFormStyled\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form id=\"contact\" onSubmit={this.handleSubmit}>\n        <label className=\"label\" htmlFor={this.nameInputId}>\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n            placeholder=\"Type to name\"\n          />\n        </label>\n\n        <label className=\"label\" htmlFor={this.numberInputId}>\n          Phone number\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n            placeholder=\"Type to phone(e.g. 111-11-11)\"\n          />\n        </label>\n\n        <button type=\"submit\" className=\"submitBtn\">\n          Add contact\n        </button>\n      </Form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nconst ContactUl = styled.ul`\n  .contactList__item {\n    width: 400px;\n    display: flex;\n    justify-content: space-around;\n    align-items: baseline;\n    color: springgreen;\n    font-size: 19px;\n    font-weight: 500;\n\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n  }\n\n  .delBtn {\n    display: flex;\n    align-items: center;\n    outline: none;\n    border-radius: 4px;\n    border-bottom: solid 1px #d6d6d6;\n    min-width: 20px;\n    height: 25px;\n    padding: 10px;\n    background-color: honeydew;\n    color: black;\n    font-weight: 500;\n    font-size: 12px;\n\n    &:hover {\n      cursor: pointer;\n    }\n    &:active {\n      background-color: salmon;\n    }\n  }\n`;\n\nexport default ContactUl;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactUl from \"./ContactListStyled\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ContactUl>\n      {contacts.map(({ id, name, number }) => (\n        <li className=\"contactList__item\" key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className=\"delBtn\"\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ContactUl>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  color: honeydew;\n  font-size: 22px;\n  font-weight: 700;\n\n  .input {\n    margin-top: 20px;\n    padding: 10px;\n    width: 250px;\n    height: 35px;\n    color: black;\n    font-size: 16px;\n    font-style: italic;\n  }\n`;\n\nexport default Label;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Label from \"./FilterStyled\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <input className=\"input\" type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport Container from \"./AppStyled\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in use`);\n    } else if (contacts.find((contact) => contact.number === number)) {\n      alert(`${number} is already in use`);\n    } else if (name.trim() === \"\" || number.trim() === \"\") {\n      alert(\"Enter the contact's name and(or) phone number!\");\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n      alert(\"Enter the correct phone number\");\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  delContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  getContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  changeFilter = (evt) => {\n    this.setState({ filter: evt.currentTarget.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getContacts();\n\n    return (\n      <Container>\n        <h1 className=\"h1Title\">Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 className=\"h2Title\">Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChange={this.changeFilter} />\n        )}\n        {contacts.length > 0 ? (\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={this.delContact}\n          />\n        ) : (\n          <p className=\"text\">Your phonebook is empty. Please add contact.</p>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./base.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}